"""Verify the parity summary artifact.

This script reads a parity summary text file (generated by
``scripts/run_parity.py``) and determines whether the SDK and raw
paths produced matching schemas and event counts.  The summary
should include a line containing the text "SDK parity OK" to
indicate success.  If no such line is found, the script exits
with a non-zero status code.

Usage::

    python scripts/verify_parity_summary.py --file artifacts/parity_summary.txt

In CI, this script can be used to fail the build when parity
tests detect mismatches.  In offline mode, the script will
always succeed if the marker line is present.
"""

from __future__ import annotations

import argparse
import sys
from pathlib import Path


def verify_parity_summary(path: Path) -> bool:
    """Return True if the parity summary contains the success marker.

    Parameters
    ----------
    path: pathlib.Path
        Path to the summary file.  The file must exist.

    Returns
    -------
    bool
        True if "SDK parity OK" appears in the file, False otherwise.
    """
    try:
        text = path.read_text()
    except Exception:
        return False
    return "SDK parity OK" in text


def main(argv: list[str]) -> None:
    parser = argparse.ArgumentParser(description="Verify parity summary artifact")
    parser.add_argument("--file", required=True, help="Path to parity_summary.txt")
    args = parser.parse_args(argv)
    p = Path(args.file)
    ok = verify_parity_summary(p)
    if ok:
        print("Parity summary indicates success: SDK parity OK")
        sys.exit(0)
    else:
        print("Parity summary indicates failure or missing marker")
        sys.exit(1)


if __name__ == "__main__":
    main(sys.argv[1:])
