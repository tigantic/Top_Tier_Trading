name: Continuous Integration

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - "*"

jobs:
  lint-and-format:
    runs-on: ubuntu-latest
    name: Lint & Format
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Python and Install Dependencies
        # This uses the reusable action to set up the entire environment.
        uses: ./.github/actions/setup-python

      - name: Run Linters and Format Check
        # 'poetry run' ensures the commands are executed inside the correct environment.
        run: poetry run ruff check . && poetry run ruff format --check .

  security-scan:
    runs-on: ubuntu-latest
    name: Security Scan
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Python and Install Dependencies
        uses: ./.github/actions/setup-python

      - name: Run Security Scans
        run: poetry run bandit -r ./workers/src

  integration-tests:
    runs-on: ubuntu-latest
    name: Integration Tests
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRANALYZE_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: test_db
        ports:
          - 5432:5432
        options: >-
          --health-cmd="pg_isready" --health-interval=10s --health-timeout=5s --health-retries=5

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Python and Install Dependencies
        uses: ./.github/actions/setup-python

      - name: Run Tests
        env:
          STATE_STORE_URI: "postgresql+asyncpg://postgres:postgres@localhost:5432/test_db"
          REDIS_HOST: localhost
          REDIS_PORT: 6379
        run: poetry run pytest tests/