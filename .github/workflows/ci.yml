name: Continuous Integration

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - "*"

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    # Service containers provide live Postgres and Redis for integration tests
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: test_db
        ports:
          - 5432:5432
        options: >-
          --health-cmd="pg_isready" --health-interval=10s --health-timeout=5s --health-retries=5

      redis:
        image: redis:7
        ports:
          - 6379:6379
        options: >-
          --health-cmd="redis-cli ping" --health-interval=10s --health-timeout=5s --health-retries=5

    strategy:
      matrix:
        python-version: ["3.11"]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          cache: 'poetry'

      - name: Install Poetry
        # This dedicated action installs the Poetry executable and adds it to the PATH
        uses: snok/install-poetry@v1
        with:
          virtualenvs-create: true
          virtualenvs-in-project: true

      - name: Install dependencies
        run: poetry install --no-root --no-interaction --no-ansi

      - name: Lint, Format, and Security Scan
        # 'poetry run' ensures commands use the correct virtual environment and dependencies
        run: |
          poetry run ruff check .
          poetry run ruff format --check .
          poetry run bandit -r ./workers/src

      - name: Run Tests with Coverage
        # Environment variables are passed to the tests to connect to the service containers
        env:
          STATE_STORE_URI: "postgresql+asyncpg://postgres:postgres@localhost:5432/test_db"
          REDIS_HOST: localhost
          REDIS_PORT: 6379
        run: poetry run coverage run -m pytest -q tests