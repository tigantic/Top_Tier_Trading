name: Continuous Integration

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - "*"

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.11"]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          virtualenvs-create: true
          virtualenvs-in-project: true

      - name: Load cached venv
        id: cached-poetry-dependencies
        uses: actions/cache@v4
        with:
          path: .venv
          key: venv-${{ runner.os }}-${{ steps.setup-python.outputs.python-version }}-${{ hashFiles('**/poetry.lock') }}

      - name: Install dependencies
        if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
        run: poetry install --no-root --no-interaction --no-ansi

      - name: Lint, Format, and Security Scan
        run: |
          poetry run ruff check .
          poetry run ruff format --check .
          poetry run bandit -r ./workers/src
          poetry run safety check

      - name: Run Tests with Coverage
        run: |
          poetry run coverage run -m pytest -q tests
          poetry run coverage xml -o coverage.xml