# Copy of secrets.env with placeholder values for local development.

POSTGRES_USER=postgres
POSTGRES_PASSWORD=postgres
POSTGRES_DB=trading
POSTGRES_PORT=5432

REDIS_HOST=cache
REDIS_PORT=6379

# Coinbase API credentials
COINBASE_API_KEY=your_api_key_id
COINBASE_PASSPHRASE=your_api_passphrase
COINBASE_RETAIL_PORTFOLIO_ID=your_portfolio_id

COINBASE_API_SECRET_FILE=conf/coinbase_private_key.pem

ALLOWED_MARKETS=BTC-USD,ETH-USD,XRP-USD
LIVE_TRADING_DEFAULT=false
DRY_RUN=true
SAFE_MODE=true
PAPER_TRADING=true

# Optional persistent state configuration.  If STATE_STORE_URI is set,
# workers will persist exposures, positions and PnL to the specified
# database using SQLAlchemy (e.g. postgresql+asyncpg://user:pass@db:5432/trading).
# If only STATE_STORE_PATH is provided, state will be written to a local JSON
# file at that path.  If neither is set, in-memory state is used.
STATE_STORE_URI=
STATE_STORE_PATH=

STRATEGY_POLL_INTERVAL=10
STRATEGY_PRICE_DELTA_PCT=0.2
STRATEGY_SIZE=0.001

MAX_ORDER_NOTIONAL=1000
MAX_ORDERS_PER_MINUTE=30
MAX_OPEN_ORDERS=50
PRICE_BAND_PCT=2.5
DAILY_MAX_LOSS=10000

# Volatility configuration.  Set ``VOLATILITY_WINDOW`` to the number of price
# returns to retain for volatility estimation (e.g. 20 for a rolling window
# of the last 20 observations).  Set ``VOLATILITY_MULT`` to scale the
# volatility band width (e.g. 2.0 for two standard deviations).  The
# ``VOLATILITY_METHOD`` can be ``std`` (sample standard deviation) or
# ``ewma`` (exponentially weighted moving average).  ``VOLATILITY_ALPHA``
# controls the smoothing factor for EWMA (0 < alpha < 1).  When not set or
# window < 2, volatility bands are disabled.
VOLATILITY_WINDOW=20
VOLATILITY_MULT=2.0
VOLATILITY_METHOD=std
VOLATILITY_ALPHA=0.94

# Average True Range (ATR) configuration.  When ``VOLATILITY_METHOD=atr``
# the ATR is computed as the rolling average of absolute percentage
# price changes over ``ATR_WINDOW`` observations.  Set ``ATR_WINDOW`` to
# a positive integer (e.g. 14) to enable ATR-based volatility bands.  When
# unset or 0, ATR bands are disabled.
ATR_WINDOW=14

# Simple moving average (SMA) strategy configuration.  When using
# ``SmaStrategy`` via the STRATEGIES environment variable, this
# specifies the number of recent prices included in the moving
# average.  A larger window smooths out noise but reacts slower to
# changes.  Defaults to 20.
SMA_WINDOW=20

# Toggle the use of the official Coinbase Advanced Trade SDK.  When set to
# ``true`` the worker will attempt to instantiate the OfficialRestClient
# and fall back to the HTTP client on failure.  Defaults to false.
USE_OFFICIAL_SDK=false

# Enable real‑time streaming for the Ops UI.  When ``USE_SSE=true`` the
# dashboard will attempt to connect to the SSE endpoint at
# `/api/streams/sse` for near real‑time updates.  When false, the
# dashboard falls back to polling every few seconds.
USE_SSE=true

PROMETHEUS_PORT=9108

# Event store configuration.  If set, all raw market data and order events
# will be appended to this file in JSON Lines format.  Use this for event
# sourcing or training dataset generation.  Leave blank to disable.
EVENT_STORE_PATH=artifacts/events/events.jsonl

# RabbitMQ defaults.  When set, workers will use a RabbitMQ event bus.  If unset,
# the workers fall back to Redis or in-memory bus based on other variables.
RABBITMQ_HOST=rabbitmq
RABBITMQ_PORT=5672
RABBITMQ_USERNAME=guest
RABBITMQ_PASSWORD=guest

# When true the API /api/streams/sse endpoint subscribes to the event bus (Redis)
# instead of polling Prometheus.  Requires Redis to be configured.  If false
# or unset, the SSE endpoint will continue to poll Prometheus metrics.
USE_EVENT_BUS_SSE=false

# Alerting configuration.  When enabled, the worker subscribes to PnL
# updates and sends alerts via Slack when the kill switch engages or
# daily PnL breaches a configured threshold.  Set ALERT_ENABLE=true to
# activate alerting.
ALERT_ENABLE=false
# Absolute PnL threshold in quote currency that triggers an alert when
# daily PnL falls below -ALERT_PNL_THRESHOLD.  Set to 0 to disable
# threshold-based alerts (kill switch alerts remain active).
ALERT_PNL_THRESHOLD=0
# Slack credentials for alerting.  Required when ALERT_ENABLE=true.
SLACK_BOT_TOKEN=
SLACK_CHANNEL_ID=

# Optional override for Slack alerts.  If set, alerts will be sent to
# this channel instead of SLACK_CHANNEL_ID.  Useful for separating
# operational alerts from regular bot commands.
SLACK_ALERT_CHANNEL=

# Microsoft Teams webhook URL.  When provided, the AlertService will
# post alerts to this Teams channel in addition to or instead of Slack.
TEAMS_WEBHOOK_URL=

# Secrets backend selection.  Supported values:
# - env (default): load secrets from environment variables or *_FILE paths
# - aws: load secrets from AWS Secrets Manager using boto3
SECRETS_BACKEND=env

# AWS Secrets Manager configuration.  Used when SECRETS_BACKEND=aws.
# Prefix prepended to secret names when fetching (e.g. myapp).  Secrets
# will be requested as {AWS_SECRETS_PREFIX}/{NAME}.
AWS_SECRETS_PREFIX=
# AWS region to query for secrets (e.g. us-east-1).
AWS_REGION=

# Vault configuration.  When ``SECRETS_BACKEND=vault`` the secrets
# manager will attempt to fetch ``{VAULT_PREFIX}/{NAME}`` from
# ``VAULT_ADDR`` using the provided ``VAULT_TOKEN``.  If not set or
# fetching fails, secrets fall back to environment variables.
VAULT_ADDR=
VAULT_TOKEN=
VAULT_PREFIX=

# Deep Q‑Network (DQN) strategy hyperparameters.  These control the
# learning behaviour of the approximate Q‑learning agent in
# ``DeepQNetworkStrategy``.
# Learning rate (alpha).  Higher values adjust weights more rapidly.
DQN_LR=0.01
# Discount factor (gamma).  Controls how far into the future rewards
# are considered.
DQN_GAMMA=0.9
# Initial exploration probability (epsilon).
DQN_EPSILON_START=0.2
# Minimum epsilon value (floor).
DQN_EPSILON_MIN=0.01
# Decay factor applied to epsilon after each observation.
DQN_EPSILON_DECAY=0.995
# Order size per trade for the DQN strategies.
DQN_SIZE=0.001