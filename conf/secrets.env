# Example secrets file for local development.

POSTGRES_USER=postgres
POSTGRES_PASSWORD=postgres
POSTGRES_DB=trading
POSTGRES_PORT=5432

REDIS_HOST=cache
REDIS_PORT=6379

# Coinbase API credentials
COINBASE_API_KEY=your_api_key_id
COINBASE_PASSPHRASE=your_api_passphrase
COINBASE_RETAIL_PORTFOLIO_ID=your_portfolio_id

# Path to your private API secret (Ed25519 or HMAC)
COINBASE_API_SECRET_FILE=conf/coinbase_private_key.pem

# Trading and risk configuration
ALLOWED_MARKETS=BTC-USD,ETH-USD,XRP-USD
LIVE_TRADING_DEFAULT=false
DRY_RUN=true
SAFE_MODE=true
PAPER_TRADING=true

# Strategy parameters
STRATEGY_POLL_INTERVAL=10
STRATEGY_PRICE_DELTA_PCT=0.2
STRATEGY_SIZE=0.001

# Risk limits
MAX_ORDER_NOTIONAL=1000
MAX_ORDERS_PER_MINUTE=30
MAX_OPEN_ORDERS=50
PRICE_BAND_PCT=2.5
DAILY_MAX_LOSS=10000

# Volatility configuration
# Number of price returns to retain for volatility estimation.  When less than 2,
# volatility bands are disabled.
VOLATILITY_WINDOW=20
# Multiplier to scale the computed volatility into a price band.
VOLATILITY_MULT=2.0
# Method used to compute volatility: ``std`` for standard deviation or ``ewma`` for
# exponentially weighted moving average.  See README.md for details.
VOLATILITY_METHOD=std
# Smoothing factor for EWMA volatility (0 < alpha < 1).  Only used when
# VOLATILITY_METHOD=ewma.
VOLATILITY_ALPHA=0.94

# Misc
PROMETHEUS_PORT=9108

# Event store.  When set, all market data and order events are appended to
# this file in JSON Lines format.  Use this log for event sourcing or ML
# dataset generation.  Leave blank to disable.
EVENT_STORE_PATH=artifacts/events/events.jsonl

# RabbitMQ defaults.  If set, workers will publish/subscribe via RabbitMQ.  
# When unset, workers fall back to Redis or in-memory event bus.  See
# docker-compose.yml and worker_main_refactored.py for details.
RABBITMQ_HOST=rabbitmq
RABBITMQ_PORT=5672
RABBITMQ_USERNAME=guest
RABBITMQ_PASSWORD=guest

# Optional persistent state configuration.  If STATE_STORE_URI is set,
# workers will persist exposures, positions and PnL to the specified
# database.  Supported URIs are SQLAlchemy URLs (e.g.,
# postgresql+asyncpg://user:pass@host:5432/dbname).  If only
# STATE_STORE_PATH is provided, state will be written to a local JSON
# file at that path.  If neither is set, in-memory state is used.
STATE_STORE_URI=
STATE_STORE_PATH=

# Use refactored worker implementation with event bus and plugins
ATLAS_USE_REFACTORED_WORKERS=true